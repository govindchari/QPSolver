<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d4/d9d/qoco__api_8c" kind="file" language="C++">
    <compoundname>qoco_api.c</compoundname>
    <includes local="yes">qoco_api.h</includes>
    <includes local="yes">amd.h</includes>
    <incdepgraph>
      <node id="2">
        <label>qoco_api.h</label>
      </node>
      <node id="1">
        <label>/home/govind/Desktop/git/qoco/src/qoco_api.c</label>
        <link refid="d4/d9d/qoco__api_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>amd.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1ace38c86b1bc257945fe160f54b354b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QOCOInt</type>
        <definition>QOCOInt qoco_setup</definition>
        <argsstring>(QOCOSolver *solver, QOCOInt n, QOCOInt m, QOCOInt p, QOCOCscMatrix *P, QOCOFloat *c, QOCOCscMatrix *A, QOCOFloat *b, QOCOCscMatrix *G, QOCOFloat *h, QOCOInt l, QOCOInt nsoc, QOCOInt *q, QOCOSettings *settings)</argsstring>
        <name>qoco_setup</name>
        <param>
          <type>QOCOSolver *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>n</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>m</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>p</declname>
        </param>
        <param>
          <type>QOCOCscMatrix *</type>
          <declname>P</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>QOCOCscMatrix *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>QOCOCscMatrix *</type>
          <declname>G</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>l</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>nsoc</declname>
        </param>
        <param>
          <type>QOCOInt *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>QOCOSettings *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="14" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="14" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1a4924aaa44b38370e774f3754f404145a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qoco_set_csc</definition>
        <argsstring>(QOCOCscMatrix *A, QOCOInt m, QOCOInt n, QOCOInt Annz, QOCOFloat *Ax, QOCOInt *Ap, QOCOInt *Ai)</argsstring>
        <name>qoco_set_csc</name>
        <param>
          <type>QOCOCscMatrix *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>m</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>n</declname>
        </param>
        <param>
          <type>QOCOInt</type>
          <declname>Annz</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>Ax</declname>
        </param>
        <param>
          <type>QOCOInt *</type>
          <declname>Ap</declname>
        </param>
        <param>
          <type>QOCOInt *</type>
          <declname>Ai</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="232" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="232" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1a3b5424d92406d0dbdbecf126b8970625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_default_settings</definition>
        <argsstring>(QOCOSettings *settings)</argsstring>
        <name>set_default_settings</name>
        <param>
          <type>QOCOSettings *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="243" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="243" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1ae907f556c8bd418aa91069c064229675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QOCOInt</type>
        <definition>QOCOInt qoco_update_settings</definition>
        <argsstring>(QOCOSolver *solver, const QOCOSettings *new_settings)</argsstring>
        <name>qoco_update_settings</name>
        <param>
          <type>QOCOSolver *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type>const QOCOSettings *</type>
          <declname>new_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="258" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="258" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1a525738f05532dce21ec82ee7c3cf4138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_vector_data</definition>
        <argsstring>(QOCOSolver *solver, QOCOFloat *cnew, QOCOFloat *bnew, QOCOFloat *hnew)</argsstring>
        <name>update_vector_data</name>
        <param>
          <type>QOCOSolver *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>cnew</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>bnew</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>hnew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="280" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="280" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1ae144e269bd46cb81ae3e1eab33a69915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_matrix_data</definition>
        <argsstring>(QOCOSolver *solver, QOCOFloat *Pxnew, QOCOFloat *Axnew, QOCOFloat *Gxnew)</argsstring>
        <name>update_matrix_data</name>
        <param>
          <type>QOCOSolver *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>Pxnew</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>Axnew</declname>
        </param>
        <param>
          <type>QOCOFloat *</type>
          <declname>Gxnew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="308" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="308" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1a12ff54d8eb71178436b015cd3a485815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QOCOInt</type>
        <definition>QOCOInt qoco_solve</definition>
        <argsstring>(QOCOSolver *solver)</argsstring>
        <name>qoco_solve</name>
        <param>
          <type>QOCOSolver *</type>
          <declname>solver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="389" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="389" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9d/qoco__api_8c_1adf388119bb41bbc683e099321879eebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QOCOInt</type>
        <definition>QOCOInt qoco_cleanup</definition>
        <argsstring>(QOCOSolver *solver)</argsstring>
        <name>qoco_cleanup</name>
        <param>
          <type>QOCOSolver *</type>
          <declname>solver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c" line="451" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="451" bodyend="534"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Govind M. Chari <ulink url="mailto:govindchari1@gmail.com">govindchari1@gmail.com</ulink></para>
</simplesect>
</para>
<sect1 id="d3/d91/utils_8c_1LICENSE">
<title>LICENSE</title>
<para>Copyright (c) 2024, Govind M. Chari This source code is licensed under the BSD 2-Clause License </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qoco_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;amd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">QOCOInt<sp/><ref refid="d4/d9d/qoco__api_8c_1ace38c86b1bc257945fe160f54b354b23" kindref="member">qoco_setup</ref>(QOCOSolver*<sp/>solver,<sp/>QOCOInt<sp/>n,<sp/>QOCOInt<sp/>m,<sp/>QOCOInt<sp/>p,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QOCOCscMatrix*<sp/>P,<sp/>QOCOFloat*<sp/>c,<sp/>QOCOCscMatrix*<sp/>A,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QOCOFloat*<sp/>b,<sp/>QOCOCscMatrix*<sp/>G,<sp/>QOCOFloat*<sp/>h,<sp/>QOCOInt<sp/>l,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QOCOInt<sp/>nsoc,<sp/>QOCOInt*<sp/>q,<sp/>QOCOSettings*<sp/>settings)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>setup<sp/>timer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>QOCOTimer<sp/>setup_timer;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="df/d41/timer_8c_1a7469e0d577f6670cfd46b636d47a6e82" kindref="member">start_timer</ref>(&amp;setup_timer);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>problem<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d08/input__validation_8c_1a26e99d040f1360a2c17d86709fe0302f" kindref="member">qoco_validate_data</ref>(P,<sp/>c,<sp/>A,<sp/>b,<sp/>G,<sp/>h,<sp/>l,<sp/>nsoc,<sp/>q))<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/de6/qoco__error_8c_1ad7b3a55bfa4f5de621ac7fb6bccf1732" kindref="member">qoco_error</ref>(QOCO_DATA_VALIDATION_ERROR);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d08/input__validation_8c_1a1bfb924cde6bff6810d49cea5e0a2e4f" kindref="member">qoco_validate_settings</ref>(settings))<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/de6/qoco__error_8c_1ad7b3a55bfa4f5de621ac7fb6bccf1732" kindref="member">qoco_error</ref>(QOCO_SETTINGS_VALIDATION_ERROR);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>solver-&gt;settings<sp/>=<sp/><ref refid="d3/d91/utils_8c_1a5275dad2b3474f32c7efda823e983ba3" kindref="member">copy_settings</ref>(settings);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>workspace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>solver-&gt;work<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOWorkspace));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Malloc<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(solver-&gt;work))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOCO_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOProblemData));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Malloc<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(solver-&gt;work-&gt;data))<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOCO_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>problem<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;m<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;n<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;p<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;A<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1acc38bacc4387241a20e9db0ba2f931e4" kindref="member">new_qoco_csc_matrix</ref>(A);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;G<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1acc38bacc4387241a20e9db0ba2f931e4" kindref="member">new_qoco_csc_matrix</ref>(G);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;c<sp/>=<sp/>qoco_malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;b<sp/>=<sp/>qoco_malloc(p<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;h<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a298815cf49d7a35894fd063fb3f59d07" kindref="member">copy_arrayf</ref>(c,<sp/>solver-&gt;work-&gt;data-&gt;c,<sp/>n);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a298815cf49d7a35894fd063fb3f59d07" kindref="member">copy_arrayf</ref>(b,<sp/>solver-&gt;work-&gt;data-&gt;b,<sp/>p);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a298815cf49d7a35894fd063fb3f59d07" kindref="member">copy_arrayf</ref>(h,<sp/>solver-&gt;work-&gt;data-&gt;h,<sp/>m);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;q<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;l<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;nsoc<sp/>=<sp/>nsoc;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>P.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(P)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;data-&gt;P<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1acc38bacc4387241a20e9db0ba2f931e4" kindref="member">new_qoco_csc_matrix</ref>(P);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;data-&gt;P<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Equilibrate<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOKKT));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;delta<sp/>=<sp/>qoco_malloc((n<sp/>+<sp/>p<sp/>+<sp/>m)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Druiz<sp/>=<sp/>qoco_malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Eruiz<sp/>=<sp/>qoco_malloc(p<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Fruiz<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Dinvruiz<sp/>=<sp/>qoco_malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Einvruiz<sp/>=<sp/>qoco_malloc(p<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Finvruiz<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;At<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1a1937734d9bd6962c5ff493f74d867e8e" kindref="member">create_transposed_matrix</ref>(solver-&gt;work-&gt;data-&gt;A);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;data-&gt;Gt<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1a1937734d9bd6962c5ff493f74d867e8e" kindref="member">create_transposed_matrix</ref>(solver-&gt;work-&gt;data-&gt;G);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="d1/d94/equilibration_8c_1a69d5dd1945452c99c240d541c9348e79" kindref="member">ruiz_equilibration</ref>(solver);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Regularize<sp/>P.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Pnzadded_idx<sp/>=<sp/>qoco_calloc(n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(P)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Pnum_nzadded<sp/>=</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d14/linalg_8c_1acec2b6c1dc707854f23d505b1fc42ab1" kindref="member">regularize</ref>(solver-&gt;work-&gt;data-&gt;P,<sp/>solver-&gt;settings-&gt;kkt_static_reg,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Pnzadded_idx);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;data-&gt;P<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d14/linalg_8c_1a38098152892b127e986ebc2994b7dcce" kindref="member">construct_identity</ref>(n,<sp/>solver-&gt;settings-&gt;kkt_static_reg);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Pnum_nzadded<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>KKT<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="db/d03/kkt_8c_1a32e6ba8ee8266d6576a302fd28485668" kindref="member">allocate_kkt</ref>(solver-&gt;work);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;nt2kkt<sp/>=<sp/>qoco_calloc(solver-&gt;work-&gt;Wnnz,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;ntdiag2kkt<sp/>=<sp/>qoco_calloc(m,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;PregtoKKT<sp/>=</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qoco_calloc(solver-&gt;work-&gt;data-&gt;P-&gt;nnz,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;AtoKKT<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qoco_calloc(solver-&gt;work-&gt;data-&gt;A-&gt;nnz,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;GtoKKT<sp/>=</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qoco_calloc(solver-&gt;work-&gt;data-&gt;G-&gt;nnz,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;rhs<sp/>=<sp/>qoco_malloc((n<sp/>+<sp/>m<sp/>+<sp/>p)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;kktres<sp/>=<sp/>qoco_malloc((n<sp/>+<sp/>m<sp/>+<sp/>p)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;xyz<sp/>=<sp/>qoco_malloc((n<sp/>+<sp/>m<sp/>+<sp/>p)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;xyzbuff1<sp/>=<sp/>qoco_malloc((n<sp/>+<sp/>m<sp/>+<sp/>p)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;xyzbuff2<sp/>=<sp/>qoco_malloc((n<sp/>+<sp/>m<sp/>+<sp/>p)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="db/d03/kkt_8c_1a6a5c96c5e3bbcc45591011475c567faa" kindref="member">construct_kkt</ref>(solver);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>primal<sp/>and<sp/>dual<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;x<sp/>=<sp/>qoco_malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;s<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;y<sp/>=<sp/>qoco_malloc(p<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;z<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;mu<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>Nesterov-Todd<sp/>scalings<sp/>and<sp/>scaled<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>QOCOInt<sp/>Wnnzfull<sp/>=<sp/>solver-&gt;work-&gt;data-&gt;l;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>solver-&gt;work-&gt;data-&gt;nsoc;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Wnnzfull<sp/>+=<sp/>solver-&gt;work-&gt;data-&gt;q[i]<sp/>*<sp/>solver-&gt;work-&gt;data-&gt;q[i];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;W<sp/>=<sp/>qoco_malloc(solver-&gt;work-&gt;Wnnz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;Wfull<sp/>=<sp/>qoco_malloc(Wnnzfull<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Wnnzfull;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;Wfull[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;Wnnzfull<sp/>=<sp/>Wnnzfull;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;Winv<sp/>=<sp/>qoco_malloc(solver-&gt;work-&gt;Wnnz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;Winvfull<sp/>=<sp/>qoco_malloc(Wnnzfull<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;WtW<sp/>=<sp/>qoco_malloc(solver-&gt;work-&gt;Wnnz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;lambda<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>QOCOInt<sp/>qmax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solver-&gt;work-&gt;data-&gt;q)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>qmax<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1ab5f0f37d238fd5f833e790474d6429be" kindref="member">max_arrayi</ref>(solver-&gt;work-&gt;data-&gt;q,<sp/>solver-&gt;work-&gt;data-&gt;nsoc);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;sbar<sp/>=<sp/>qoco_malloc(qmax<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;zbar<sp/>=<sp/>qoco_malloc(qmax<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;xbuff<sp/>=<sp/>qoco_malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;ybuff<sp/>=<sp/>qoco_malloc(p<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;ubuff1<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;ubuff2<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;ubuff3<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;Ds<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>columns<sp/>of<sp/>KKT<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>QOCOInt<sp/>Kn<sp/>=<sp/>solver-&gt;work-&gt;kkt-&gt;K-&gt;n;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>QDLDL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;etree<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt)<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Lnz<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt)<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Lp<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt)<sp/>*<sp/>(Kn<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;D<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat)<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Dinv<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat)<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;iwork<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt)<sp/>*<sp/>3<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;bwork<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;fwork<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat)<sp/>*<sp/>Kn);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>AMD<sp/>ordering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>QOCOCscMatrix*<sp/>K<sp/>=<sp/>solver-&gt;work-&gt;kkt-&gt;K;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;p<sp/>=<sp/>qoco_malloc(K-&gt;n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;pinv<sp/>=<sp/>qoco_malloc(K-&gt;n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>QOCOInt<sp/>amd_status<sp/>=<sp/>amd_order(K-&gt;n,<sp/>K-&gt;p,<sp/>K-&gt;i,<sp/>solver-&gt;work-&gt;kkt-&gt;p,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)NULL,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)NULL);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amd_status<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/de6/qoco__error_8c_1ad7b3a55bfa4f5de621ac7fb6bccf1732" kindref="member">qoco_error</ref>(QOCO_AMD_ERROR);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a9399c635b5b4fb0e61f186adfc1d0df2" kindref="member">invert_permutation</ref>(solver-&gt;work-&gt;kkt-&gt;p,<sp/>solver-&gt;work-&gt;kkt-&gt;pinv,<sp/>K-&gt;n);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Permute<sp/>KKT<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>QOCOInt*<sp/>KtoPKPt<sp/>=<sp/>qoco_malloc(K-&gt;nnz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>QOCOCscMatrix*<sp/>PKPt<sp/>=<sp/><ref refid="d8/d14/linalg_8c_1a9b96a76f1698803fd7cb386fcdfcda57" kindref="member">csc_symperm</ref>(K,<sp/>solver-&gt;work-&gt;kkt-&gt;pinv,<sp/>KtoPKPt);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>mappings<sp/>from<sp/>NT<sp/>matrix<sp/>to<sp/>permuted<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>solver-&gt;work-&gt;Wnnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;nt2kkt[i]<sp/>=<sp/>KtoPKPt[solver-&gt;work-&gt;kkt-&gt;nt2kkt[i]];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;ntdiag2kkt[i]<sp/>=</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KtoPKPt[solver-&gt;work-&gt;kkt-&gt;ntdiag2kkt[i]];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>solver-&gt;work-&gt;data-&gt;P-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;PregtoKKT[i]<sp/>=<sp/>KtoPKPt[solver-&gt;work-&gt;kkt-&gt;PregtoKKT[i]];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>solver-&gt;work-&gt;data-&gt;A-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;AtoKKT[i]<sp/>=<sp/>KtoPKPt[solver-&gt;work-&gt;kkt-&gt;AtoKKT[i]];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>solver-&gt;work-&gt;data-&gt;G-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;GtoKKT[i]<sp/>=<sp/>KtoPKPt[solver-&gt;work-&gt;kkt-&gt;GtoKKT[i]];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;kkt-&gt;K);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>qoco_free(KtoPKPt);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;K<sp/>=<sp/>PKPt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>elimination<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>QOCOInt<sp/>sumLnz<sp/>=</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QDLDL_etree(Kn,<sp/>solver-&gt;work-&gt;kkt-&gt;K-&gt;p,<sp/>solver-&gt;work-&gt;kkt-&gt;K-&gt;i,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;iwork,<sp/>solver-&gt;work-&gt;kkt-&gt;Lnz,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;etree);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sumLnz<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOCO_SETUP_ERROR;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Li<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOInt)<sp/>*<sp/>sumLnz);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;Lx<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat)<sp/>*<sp/>sumLnz);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>solution<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>solver-&gt;sol<sp/>=<sp/>qoco_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOSolution));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;x<sp/>=<sp/>qoco_malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;s<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;y<sp/>=<sp/>qoco_malloc(p<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;z<sp/>=<sp/>qoco_malloc(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QOCOFloat));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;iters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;status<sp/>=<sp/>QOCO_UNSOLVED;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="df/d41/timer_8c_1acfd10eed45b36f806cb9f6da35044e8e" kindref="member">stop_timer</ref>(&amp;setup_timer);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;setup_time_sec<sp/>=<sp/><ref refid="df/d41/timer_8c_1a4ea3627b111cae5ddb7b1bc76a113eb5" kindref="member">get_elapsed_time_sec</ref>(&amp;setup_timer);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOCO_NO_ERROR;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d9d/qoco__api_8c_1a4924aaa44b38370e774f3754f404145a" kindref="member">qoco_set_csc</ref>(QOCOCscMatrix*<sp/>A,<sp/>QOCOInt<sp/>m,<sp/>QOCOInt<sp/>n,<sp/>QOCOInt<sp/>Annz,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QOCOFloat*<sp/>Ax,<sp/>QOCOInt*<sp/>Ap,<sp/>QOCOInt*<sp/>Ai)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>A-&gt;m<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>A-&gt;n<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>A-&gt;nnz<sp/>=<sp/>Annz;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>A-&gt;x<sp/>=<sp/>Ax;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>A-&gt;p<sp/>=<sp/>Ap;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>A-&gt;i<sp/>=<sp/>Ai;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d9d/qoco__api_8c_1a3b5424d92406d0dbdbecf126b8970625" kindref="member">set_default_settings</ref>(QOCOSettings*<sp/>settings)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>settings-&gt;max_iters<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>settings-&gt;bisect_iters<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>settings-&gt;ruiz_iters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>settings-&gt;iter_ref_iters<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>settings-&gt;kkt_static_reg<sp/>=<sp/>1e-8;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>settings-&gt;kkt_dynamic_reg<sp/>=<sp/>1e-8;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>settings-&gt;abstol<sp/>=<sp/>1e-7;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>settings-&gt;reltol<sp/>=<sp/>1e-7;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>settings-&gt;abstol_inacc<sp/>=<sp/>1e-5;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>settings-&gt;reltol_inacc<sp/>=<sp/>1e-5;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>settings-&gt;verbose<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">QOCOInt<sp/><ref refid="d4/d9d/qoco__api_8c_1ae907f556c8bd418aa91069c064229675" kindref="member">qoco_update_settings</ref>(QOCOSolver*<sp/>solver,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QOCOSettings*<sp/>new_settings)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d08/input__validation_8c_1a1bfb924cde6bff6810d49cea5e0a2e4f" kindref="member">qoco_validate_settings</ref>(new_settings))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/de6/qoco__error_8c_1ad7b3a55bfa4f5de621ac7fb6bccf1732" kindref="member">qoco_error</ref>(QOCO_SETTINGS_VALIDATION_ERROR);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;max_iters<sp/>=<sp/>new_settings-&gt;max_iters;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;bisect_iters<sp/>=<sp/>new_settings-&gt;bisect_iters;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;ruiz_iters<sp/>=<sp/>new_settings-&gt;ruiz_iters;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;iter_ref_iters<sp/>=<sp/>new_settings-&gt;iter_ref_iters;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;kkt_static_reg<sp/>=<sp/>new_settings-&gt;kkt_static_reg;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;kkt_dynamic_reg<sp/>=<sp/>new_settings-&gt;kkt_dynamic_reg;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;abstol<sp/>=<sp/>new_settings-&gt;abstol;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;reltol<sp/>=<sp/>new_settings-&gt;reltol;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;abstol_inacc<sp/>=<sp/>new_settings-&gt;abstol_inacc;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;abstol_inacc<sp/>=<sp/>new_settings-&gt;abstol_inacc;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>solver-&gt;settings-&gt;verbose<sp/>=<sp/>new_settings-&gt;verbose;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d9d/qoco__api_8c_1a525738f05532dce21ec82ee7c3cf4138" kindref="member">update_vector_data</ref>(QOCOSolver*<sp/>solver,<sp/>QOCOFloat*<sp/>cnew,<sp/>QOCOFloat*<sp/>bnew,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QOCOFloat*<sp/>hnew)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;status<sp/>=<sp/>QOCO_UNSOLVED;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>QOCOProblemData*<sp/>data<sp/>=<sp/>solver-&gt;work-&gt;data;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>cost<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnew)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;c[i]<sp/>=<sp/>solver-&gt;work-&gt;kkt-&gt;k<sp/>*<sp/>solver-&gt;work-&gt;kkt-&gt;Druiz[i]<sp/>*<sp/>cnew[i];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>equality<sp/>constraint<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bnew)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;p;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;b[i]<sp/>=<sp/>solver-&gt;work-&gt;kkt-&gt;Eruiz[i]<sp/>*<sp/>bnew[i];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>conic<sp/>constraint<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hnew)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;m;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;h[i]<sp/>=<sp/>solver-&gt;work-&gt;kkt-&gt;Fruiz[i]<sp/>*<sp/>hnew[i];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d9d/qoco__api_8c_1ae144e269bd46cb81ae3e1eab33a69915" kindref="member">update_matrix_data</ref>(QOCOSolver*<sp/>solver,<sp/>QOCOFloat*<sp/>Pxnew,<sp/>QOCOFloat*<sp/>Axnew,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QOCOFloat*<sp/>Gxnew)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;status<sp/>=<sp/>QOCO_UNSOLVED;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>QOCOProblemData*<sp/>data<sp/>=<sp/>solver-&gt;work-&gt;data;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>QOCOKKT*<sp/>kkt<sp/>=<sp/>solver-&gt;work-&gt;kkt;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Undo<sp/>regularization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1ad6f0a241171053d252ef5ff6c7cdf53a" kindref="member">unregularize</ref>(data-&gt;P,<sp/>solver-&gt;settings-&gt;kkt_static_reg);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequilibrate<sp/>P.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1aed2caeb493cbf251a8d9e446a3d19fc6" kindref="member">scale_arrayf</ref>(data-&gt;P-&gt;x,<sp/>data-&gt;P-&gt;x,<sp/>kkt-&gt;kinv,<sp/>data-&gt;P-&gt;nnz);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a2fae5e0df1f9fb3d70115f91a74c9e99" kindref="member">row_col_scale</ref>(data-&gt;P,<sp/>kkt-&gt;Dinvruiz,<sp/>kkt-&gt;Dinvruiz);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequilibrate<sp/>c.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1aed2caeb493cbf251a8d9e446a3d19fc6" kindref="member">scale_arrayf</ref>(data-&gt;c,<sp/>data-&gt;c,<sp/>kkt-&gt;kinv,<sp/>data-&gt;n);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1ada738414c28d331a24f6095fafebe1c9" kindref="member">ew_product</ref>(data-&gt;c,<sp/>kkt-&gt;Dinvruiz,<sp/>data-&gt;c,<sp/>data-&gt;n);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequilibrate<sp/>A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a2fae5e0df1f9fb3d70115f91a74c9e99" kindref="member">row_col_scale</ref>(data-&gt;A,<sp/>kkt-&gt;Einvruiz,<sp/>kkt-&gt;Dinvruiz);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequilibrate<sp/>G.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a2fae5e0df1f9fb3d70115f91a74c9e99" kindref="member">row_col_scale</ref>(data-&gt;G,<sp/>kkt-&gt;Finvruiz,<sp/>kkt-&gt;Dinvruiz);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequilibrate<sp/>b.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1ada738414c28d331a24f6095fafebe1c9" kindref="member">ew_product</ref>(data-&gt;b,<sp/>kkt-&gt;Einvruiz,<sp/>data-&gt;b,<sp/>data-&gt;p);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequilibrate<sp/>h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1ada738414c28d331a24f6095fafebe1c9" kindref="member">ew_product</ref>(data-&gt;h,<sp/>kkt-&gt;Finvruiz,<sp/>data-&gt;h,<sp/>data-&gt;m);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>P<sp/>and<sp/>avoid<sp/>nonzeros<sp/>that<sp/>were<sp/>added<sp/>for<sp/>regularization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Pxnew)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>QOCOInt<sp/>avoid<sp/>=</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kkt-&gt;Pnum_nzadded<sp/>&gt;<sp/>0<sp/>?<sp/>kkt-&gt;Pnzadded_idx[0]<sp/>:<sp/>data-&gt;P-&gt;nnz<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>QOCOInt<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;P-&gt;nnz<sp/>-<sp/>kkt-&gt;Pnum_nzadded;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>avoid)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avoid<sp/>=<sp/>offset<sp/>&gt;<sp/>kkt-&gt;Pnum_nzadded<sp/>?<sp/>kkt-&gt;Pnzadded_idx[offset]</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data-&gt;P-&gt;nnz<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;P-&gt;x[i<sp/>+<sp/>offset]<sp/>=<sp/>Pxnew[i];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Axnew)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;A-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;A-&gt;x[i]<sp/>=<sp/>Axnew[i];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>G.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Gxnew)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;G-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;G-&gt;x[i]<sp/>=<sp/>Gxnew[i];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Equilibrate<sp/>new<sp/>matrix<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="d1/d94/equilibration_8c_1a69d5dd1945452c99c240d541c9348e79" kindref="member">ruiz_equilibration</ref>(solver);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Regularize<sp/>P.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1ad6f0a241171053d252ef5ff6c7cdf53a" kindref="member">unregularize</ref>(data-&gt;P,<sp/>-solver-&gt;settings-&gt;kkt_static_reg);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>P<sp/>in<sp/>KKT<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;P-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;K-&gt;x[solver-&gt;work-&gt;kkt-&gt;PregtoKKT[i]]<sp/>=<sp/>data-&gt;P-&gt;x[i];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>A<sp/>in<sp/>KKT<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;A-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;K-&gt;x[solver-&gt;work-&gt;kkt-&gt;AtoKKT[i]]<sp/>=<sp/>data-&gt;A-&gt;x[i];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>G<sp/>in<sp/>KKT<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data-&gt;G-&gt;nnz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;work-&gt;kkt-&gt;K-&gt;x[solver-&gt;work-&gt;kkt-&gt;GtoKKT[i]]<sp/>=<sp/>data-&gt;G-&gt;x[i];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">QOCOInt<sp/><ref refid="d4/d9d/qoco__api_8c_1a12ff54d8eb71178436b015cd3a485815" kindref="member">qoco_solve</ref>(QOCOSolver*<sp/>solver)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="df/d41/timer_8c_1a7469e0d577f6670cfd46b636d47a6e82" kindref="member">start_timer</ref>(&amp;(solver-&gt;work-&gt;solve_timer));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d08/input__validation_8c_1a1bfb924cde6bff6810d49cea5e0a2e4f" kindref="member">qoco_validate_settings</ref>(solver-&gt;settings))<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/de6/qoco__error_8c_1ad7b3a55bfa4f5de621ac7fb6bccf1732" kindref="member">qoco_error</ref>(QOCO_SETTINGS_VALIDATION_ERROR);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solver-&gt;settings-&gt;verbose)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d91/utils_8c_1a79b078c095c4c7b6003826775ac18b64" kindref="member">print_header</ref>(solver);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>initializations<sp/>for<sp/>primal<sp/>and<sp/>dual<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="db/d03/kkt_8c_1af0e88edff1a77bc07b379c2e194d3bff" kindref="member">initialize_ipm</ref>(solver);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QOCOInt<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>solver-&gt;settings-&gt;max_iters;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>kkt<sp/>residual.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d03/kkt_8c_1ab2c91aac19366d8fe1da940f9ab51cde" kindref="member">compute_kkt_residual</ref>(solver);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>mu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d3b/cone_8c_1a9304a88a4e884ebbcf53a2259104307d" kindref="member">compute_mu</ref>(solver-&gt;work);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>stopping<sp/>criteria.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d3/d91/utils_8c_1a7681340f414acd7335887bcf17e9a1cf" kindref="member">check_stopping</ref>(solver))<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d41/timer_8c_1acfd10eed45b36f806cb9f6da35044e8e" kindref="member">stop_timer</ref>(&amp;(solver-&gt;work-&gt;solve_timer));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d94/equilibration_8c_1a1d17dc429269fbe1f3ed4d91d65283f5" kindref="member">unscale_variables</ref>(solver-&gt;work);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d91/utils_8c_1a59db88344ea8162c2ffef33781b9a735" kindref="member">copy_solution</ref>(solver);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solver-&gt;settings-&gt;verbose)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d91/utils_8c_1acb3b30d2ed7b184cc0c180d8e2661e00" kindref="member">print_footer</ref>(solver-&gt;sol,<sp/>solver-&gt;sol-&gt;status);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solver-&gt;sol-&gt;status;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>Nesterov-Todd<sp/>scalings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d3b/cone_8c_1ae7fbd04120780584a4a4b06f2afe3fb5" kindref="member">compute_nt_scaling</ref>(solver-&gt;work);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>Nestrov-Todd<sp/>block<sp/>of<sp/>KKT<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d03/kkt_8c_1a1e4a0eefd9fb08996fc1c34b5092d53a" kindref="member">update_nt_block</ref>(solver);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>predictor-corrector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d03/kkt_8c_1a997c4579bd059099f397623479d0cd47" kindref="member">predictor_corrector</ref>(solver);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>iteration<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;sol-&gt;iters<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>solver<sp/>progress<sp/>to<sp/>console<sp/>if<sp/>we<sp/>are<sp/>solving<sp/>in<sp/>verbose<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solver-&gt;settings-&gt;verbose)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d91/utils_8c_1aed998408252b44161ed1ac30c2467deb" kindref="member">log_iter</ref>(solver);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="df/d41/timer_8c_1acfd10eed45b36f806cb9f6da35044e8e" kindref="member">stop_timer</ref>(&amp;(solver-&gt;work-&gt;solve_timer));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="d1/d94/equilibration_8c_1a1d17dc429269fbe1f3ed4d91d65283f5" kindref="member">unscale_variables</ref>(solver-&gt;work);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="d3/d91/utils_8c_1a59db88344ea8162c2ffef33781b9a735" kindref="member">copy_solution</ref>(solver);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>solver-&gt;sol-&gt;status<sp/>=<sp/>QOCO_MAX_ITER;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solver-&gt;settings-&gt;verbose)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d91/utils_8c_1acb3b30d2ed7b184cc0c180d8e2661e00" kindref="member">print_footer</ref>(solver-&gt;sol,<sp/>solver-&gt;sol-&gt;status);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOCO_MAX_ITER;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">QOCOInt<sp/><ref refid="d4/d9d/qoco__api_8c_1adf388119bb41bbc683e099321879eebd" kindref="member">qoco_cleanup</ref>(QOCOSolver*<sp/>solver)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>problem<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;data-&gt;P);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;data-&gt;A);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;data-&gt;G);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;data-&gt;At);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;data-&gt;Gt);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;data-&gt;b);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;data-&gt;c);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;data-&gt;h);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;data);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>primal<sp/>and<sp/>dual<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;rhs);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;kktres);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;xyz);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;xyzbuff1);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;xyzbuff2);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;x);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;s);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;y);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;z);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>Nesterov-Todd<sp/>scalings<sp/>and<sp/>scaled<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;W);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;Wfull);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;Winv);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;Winvfull);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;WtW);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;lambda);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;sbar);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;zbar);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;xbuff);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;ybuff);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;ubuff1);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;ubuff2);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;ubuff3);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;Ds);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>KKT<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/linalg_8c_1a4e4c7c1df7c224d28c9ee82553cfda94" kindref="member">free_qoco_csc_matrix</ref>(solver-&gt;work-&gt;kkt-&gt;K);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;p);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;pinv);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;delta);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Druiz);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Eruiz);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Fruiz);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Dinvruiz);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Einvruiz);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Finvruiz);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;nt2kkt);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;ntdiag2kkt);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Pnzadded_idx);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;PregtoKKT);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;AtoKKT);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;GtoKKT);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;etree);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Lnz);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Lp);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;D);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Dinv);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;iwork);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;bwork);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;fwork);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Li);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt-&gt;Lx);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work-&gt;kkt);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>solution<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;sol-&gt;x);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;sol-&gt;s);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;sol-&gt;y);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;sol-&gt;z);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;sol);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;work);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>qoco_free(solver-&gt;settings);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>qoco_free(solver);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/govind/Desktop/git/qoco/src/qoco_api.c"/>
  </compounddef>
</doxygen>
