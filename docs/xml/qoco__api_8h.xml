<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="qoco__api_8h" kind="file" language="C++">
    <compoundname>qoco_api.h</compoundname>
    <includes refid="definitions_8h" local="yes">definitions.h</includes>
    <includes refid="enums_8h" local="yes">enums.h</includes>
    <includes refid="equilibration_8h" local="yes">equilibration.h</includes>
    <includes refid="input__validation_8h" local="yes">input_validation.h</includes>
    <includes refid="kkt_8h" local="yes">kkt.h</includes>
    <includes refid="linalg_8h" local="yes">linalg.h</includes>
    <includes refid="qoco__error_8h" local="yes">qoco_error.h</includes>
    <includes refid="structs_8h" local="yes">structs.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includedby refid="qoco_8h" local="yes">/home/govind/Desktop/git/qoco/include/qoco.h</includedby>
    <includedby refid="qoco__api_8c" local="yes">/home/govind/Desktop/git/qoco/src/qoco_api.c</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>kkt.h</label>
        <link refid="kkt_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cone.h</label>
        <link refid="cone_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>limits.h</label>
      </node>
      <node id="7">
        <label>equilibration.h</label>
        <link refid="equilibration_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/govind/Desktop/git/qoco/include/qoco_api.h</label>
        <link refid="qoco__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>definitions.h</label>
        <link refid="definitions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>qoco_error.h</label>
        <link refid="qoco__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>linalg.h</label>
        <link refid="linalg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>input_validation.h</label>
        <link refid="input__validation_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="16">
        <label>qdldl.h</label>
      </node>
      <node id="10">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/govind/Desktop/git/qoco/include/qoco.h</label>
        <link refid="qoco_8h"/>
      </node>
      <node id="1">
        <label>/home/govind/Desktop/git/qoco/include/qoco_api.h</label>
        <link refid="qoco__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/govind/Desktop/git/qoco/src/qoco_api.c</label>
        <link refid="qoco__api_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="qoco__api_8h_1ace38c86b1bc257945fe160f54b354b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
        <definition>QOCOInt qoco_setup</definition>
        <argsstring>(QOCOSolver *solver, QOCOInt n, QOCOInt m, QOCOInt p, QOCOCscMatrix *P, QOCOFloat *c, QOCOCscMatrix *A, QOCOFloat *b, QOCOCscMatrix *G, QOCOFloat *h, QOCOInt l, QOCOInt nsoc, QOCOInt *q, QOCOSettings *settings)</argsstring>
        <name>qoco_setup</name>
        <param>
          <type><ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref> *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref> *</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref> *</type>
          <declname>G</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>nsoc</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structQOCOSettings" kindref="compound">QOCOSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Allocates all memory needed for QOCO to solve the SOCP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to solver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of optimization variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of conic constraints. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of affine equality constraints. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper triangular part of quadratic cost Hessian in CSC form. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Linear cost vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>Affine equality constraint matrix in CSC form. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Affine equality constraint offset vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para>Conic constraint matrix in CSC form. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Conic constraint offset vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of non-negative orthant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nsoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of second-order cones. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of each second-order cone. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no error or flag containing error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="57" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="14" bodyend="230" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="57" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1a4924aaa44b38370e774f3754f404145a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qoco_set_csc</definition>
        <argsstring>(QOCOCscMatrix *A, QOCOInt m, QOCOInt n, QOCOInt Annz, QOCOFloat *Ax, QOCOInt *Ap, QOCOInt *Ai)</argsstring>
        <name>qoco_set_csc</name>
        <param>
          <type><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
          <declname>Annz</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>Ax</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref> *</type>
          <declname>Ap</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref> *</type>
          <declname>Ai</declname>
        </param>
        <briefdescription>
<para>Sets the data for a compressed sparse column matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CSC matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Annz</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of nonzero elements in the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ax</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of data for the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ap</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of column pointers for the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ai</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of row indices for data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="73" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="232" bodyend="241" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1a3b5424d92406d0dbdbecf126b8970625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_default_settings</definition>
        <argsstring>(QOCOSettings *settings)</argsstring>
        <name>set_default_settings</name>
        <param>
          <type><ref refid="structQOCOSettings" kindref="compound">QOCOSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Set the default settings struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to settings struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="81" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="243" bodyend="256" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1ae907f556c8bd418aa91069c064229675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
        <definition>QOCOInt qoco_update_settings</definition>
        <argsstring>(QOCOSolver *solver, const QOCOSettings *new_settings)</argsstring>
        <name>qoco_update_settings</name>
        <param>
          <type><ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref> *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type>const <ref refid="structQOCOSettings" kindref="compound">QOCOSettings</ref> *</type>
          <declname>new_settings</declname>
        </param>
        <briefdescription>
<para>Updates settings struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to solver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_settings</parametername>
</parameternamelist>
<parameterdescription>
<para>New settings struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if update is successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="90" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="258" bodyend="278" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="90" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1a525738f05532dce21ec82ee7c3cf4138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_vector_data</definition>
        <argsstring>(QOCOSolver *solver, QOCOFloat *cnew, QOCOFloat *bnew, QOCOFloat *hnew)</argsstring>
        <name>update_vector_data</name>
        <param>
          <type><ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref> *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>cnew</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>bnew</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>hnew</declname>
        </param>
        <briefdescription>
<para>Updates data vectors. NULL can be passed in for any vector if that data will not be updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to solver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnew</parametername>
</parameternamelist>
<parameterdescription>
<para>New c vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bnew</parametername>
</parameternamelist>
<parameterdescription>
<para>New b vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hnew</parametername>
</parameternamelist>
<parameterdescription>
<para>New h vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="102" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="280" bodyend="306" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1ae144e269bd46cb81ae3e1eab33a69915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_matrix_data</definition>
        <argsstring>(QOCOSolver *solver, QOCOFloat *Pxnew, QOCOFloat *Axnew, QOCOFloat *Gxnew)</argsstring>
        <name>update_matrix_data</name>
        <param>
          <type><ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref> *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>Pxnew</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>Axnew</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref> *</type>
          <declname>Gxnew</declname>
        </param>
        <briefdescription>
<para>Updates data matrices. NULL can be passed in for any matrix data pointers if that matrix will not be updated. It is assumed that the new matrix will have the same sparsity structure as the existing matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to solver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Pxnew</parametername>
</parameternamelist>
<parameterdescription>
<para>New data for P-&gt;x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Axnew</parametername>
</parameternamelist>
<parameterdescription>
<para>New data for A-&gt;x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Gxnew</parametername>
</parameternamelist>
<parameterdescription>
<para>New data for G-&gt;x. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="115" column="6" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="308" bodyend="387" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1a12ff54d8eb71178436b015cd3a485815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
        <definition>QOCOInt qoco_solve</definition>
        <argsstring>(QOCOSolver *solver)</argsstring>
        <name>qoco_solve</name>
        <param>
          <type><ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref> *</type>
          <declname>solver</declname>
        </param>
        <briefdescription>
<para>Solves SOCP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to solver. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Exitflag to check (0 for success, failure otherwise) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="124" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="389" bodyend="449" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="124" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="qoco__api_8h_1adf388119bb41bbc683e099321879eebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref></type>
        <definition>QOCOInt qoco_cleanup</definition>
        <argsstring>(QOCOSolver *solver)</argsstring>
        <name>qoco_cleanup</name>
        <param>
          <type><ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref> *</type>
          <declname>solver</declname>
        </param>
        <briefdescription>
<para>Frees all memory allocated by qoco_setup. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to solver. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Exitflag to check (0 for success, failure otherwise) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h" line="132" column="9" bodyfile="/home/govind/Desktop/git/qoco/src/qoco_api.c" bodystart="451" bodyend="534" declfile="/home/govind/Desktop/git/qoco/include/qoco_api.h" declline="132" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Govind M. Chari <ulink url="mailto:govindchari1@gmail.com">govindchari1@gmail.com</ulink></para>
</simplesect>
</para>
<sect1 id="utils_8c_1LICENSE">
<title>LICENSE</title>
<para>Copyright (c) 2024, Govind M. Chari This source code is licensed under the BSD 3-Clause License</para>
</sect1>
<sect1 id="utils_8h_1DESCRIPTION">
<title>DESCRIPTION</title>
<para>Exposes the API for QOCO. </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QOCO_API_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QOCO_API_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="definitions_8h" kindref="compound">definitions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enums_8h" kindref="compound">enums.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="equilibration_8h" kindref="compound">equilibration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__validation_8h" kindref="compound">input_validation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kkt_8h" kindref="compound">kkt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linalg_8h" kindref="compound">linalg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qoco__error_8h" kindref="compound">qoco_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="structs_8h" kindref="compound">structs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>QOCO<sp/>solves<sp/>second-order<sp/>cone<sp/>problems<sp/>of<sp/>the<sp/>following<sp/>form</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>minimize<sp/><sp/><sp/>(1/2)x&apos;Px<sp/>+<sp/>c&apos;x</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>subject<sp/>to<sp/>Gx<sp/>\leq_C<sp/>h<sp/>&lt;==&gt;<sp/>h<sp/>-<sp/>Gx<sp/>\in<sp/>C</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ax<sp/>=<sp/>b</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>where<sp/>C<sp/>is<sp/>the<sp/>cartesian<sp/>product<sp/>of<sp/>the<sp/>non-negative<sp/>orthant<sp/>and<sp/>second-order</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>cones</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/><ref refid="qoco__api_8h_1ace38c86b1bc257945fe160f54b354b23" kindref="member">qoco_setup</ref>(<ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref>*<sp/>solver,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>n,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>m,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>p,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref>*<sp/>P,<sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>c,<sp/><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref>*<sp/>A,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>b,<sp/><ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref>*<sp/>G,<sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>h,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>l,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>nsoc,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref>*<sp/>q,<sp/><ref refid="structQOCOSettings" kindref="compound">QOCOSettings</ref>*<sp/>settings);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="qoco__api_8h_1a4924aaa44b38370e774f3754f404145a" kindref="member">qoco_set_csc</ref>(<ref refid="structQOCOCscMatrix" kindref="compound">QOCOCscMatrix</ref>*<sp/>A,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>m,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>n,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/>Annz,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>Ax,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref>*<sp/>Ap,<sp/><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref>*<sp/>Ai);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="qoco__api_8h_1a3b5424d92406d0dbdbecf126b8970625" kindref="member">set_default_settings</ref>(<ref refid="structQOCOSettings" kindref="compound">QOCOSettings</ref>*<sp/>settings);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/><ref refid="qoco__api_8h_1ae907f556c8bd418aa91069c064229675" kindref="member">qoco_update_settings</ref>(<ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref>*<sp/>solver,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQOCOSettings" kindref="compound">QOCOSettings</ref>*<sp/>new_settings);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="qoco__api_8h_1a525738f05532dce21ec82ee7c3cf4138" kindref="member">update_vector_data</ref>(<ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref>*<sp/>solver,<sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>cnew,<sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>bnew,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>hnew);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="qoco__api_8h_1ae144e269bd46cb81ae3e1eab33a69915" kindref="member">update_matrix_data</ref>(<ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref>*<sp/>solver,<sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>Pxnew,<sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>Axnew,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1a4f04b37411a6fc01fed72b02f1364188" kindref="member">QOCOFloat</ref>*<sp/>Gxnew);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/><ref refid="qoco__api_8h_1a12ff54d8eb71178436b015cd3a485815" kindref="member">qoco_solve</ref>(<ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref>*<sp/>solver);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="definitions_8h_1aedd8d3f09aca17e3ca87133e7b66c5b2" kindref="member">QOCOInt</ref><sp/><ref refid="qoco__api_8h_1adf388119bb41bbc683e099321879eebd" kindref="member">qoco_cleanup</ref>(<ref refid="structQOCOSolver" kindref="compound">QOCOSolver</ref>*<sp/>solver);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>QOCO_API_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/govind/Desktop/git/qoco/include/qoco_api.h"/>
  </compounddef>
</doxygen>
